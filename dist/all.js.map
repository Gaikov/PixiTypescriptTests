{"version":3,"sources":["log/Logger.ts","base/utils/time/IFrameListener.ts","base/utils/UMath.ts","base/utils/time/actions/IAction.ts","base/utils/time/actions/DeferredDelegateAction.ts","tests/utils/TestUtils.ts"],"names":[],"mappings":";;;;;AAAA;;GAEG;ACFH;;GAEG;ACFH;;GAEG;ACFH;;GAEG;ACFH;;GAEG;ACFH;;GAEG;AAEH;IAAA;IAYA,CAAC;IAViB,sBAAY,GAA1B,UAA2B,IAAW,EAAE,KAAa;QAEjD,8BAA8B;QAE9B,IAAM,GAAG,GAAG,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChC,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QACrB,GAAG,CAAC,QAAQ,CAAC,CAAC,IAAI,GAAC,CAAC,EAAE,CAAC,IAAI,GAAC,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;QAE3C,MAAM,CAAC,GAAG,CAAC;IACf,CAAC;IACL,gBAAC;AAAD,CAZA,AAYC,IAAA","file":"all.js","sourcesContent":["/**\r\n * Created by roman.gaikov on 6/15/2016.\r\n */\r\n\r\n\r\nexport class Logger\r\n{\r\n    public static info(...args:any[]):void\r\n    {\r\n        console.log(args.join(\" \"));\r\n    }\r\n}\r\n","/**\r\n * Created by roman.gaikov on 6/29/2016.\r\n */\r\n\r\nexport interface IFrameListener\r\n{\r\n    onEnterFrame(deltaTime:number):void;\r\n}\r\n","/**\r\n * Created by roman.gaikov on 6/28/2016.\r\n */\r\n\r\nexport class UMath\r\n{\r\n    public static rad(degrees:number):number\r\n    {\r\n        return degrees * Math.PI / 180;\r\n    }\r\n}\r\n","/**\r\n * Created by roman.gaikov on 6/29/2016.\r\n */\r\n\r\nexport interface IAction\r\n{\r\n    getActive():boolean;\r\n    onStart():void;\r\n    onStopped(cancelled:boolean):void;\r\n    frameStep(deltaTime:number):void;\r\n}\r\n\r\n\r\n","/**\r\n * Created by roman.gaikov on 6/29/2016.\r\n */\r\n\r\nimport {BaseDeferredAction} from \"./BaseDeferredAction\";\r\n\r\nexport class DeferredDelegateAction extends BaseDeferredAction\r\n{\r\n    private _delegate:()=>void;\r\n    \r\n    constructor(timeLeft:number, delegate:()=>void) {\r\n        super(timeLeft);\r\n        this._delegate = delegate;\r\n    }\r\n\r\n    protected doAction():void \r\n    {\r\n        super.doAction();\r\n        this._delegate();\r\n    }\r\n}\r\n","/**\r\n * Created by roman.gaikov on 6/29/2016.\r\n */\r\n\r\nclass TestUtils\r\n{\r\n    public static createSquare(size:number, color?:number):PIXI.Graphics\r\n    {\r\n        //Logger.info(\"color\", color);\r\n\r\n        const res = new PIXI.Graphics();\r\n        res.beginFill(color);\r\n        res.drawRect(-size/2, -size/2, size, size);\r\n\r\n        return res;\r\n    }\r\n}\r\n"],"sourceRoot":"../src"}